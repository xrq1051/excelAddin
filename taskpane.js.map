{"version":3,"file":"taskpane.js","mappings":"YA6BA,SAASA,IACPC,MAAMC,KAAI,SAAUC,GAGhB,IACIC,EADmBD,EAAQE,SAASC,WAAWC,qBACdC,OAAOC,IAAI,SAAS,GAuBzD,OAtBAL,EAAcM,KAAO,gBAErBN,EAAcO,oBAAoBC,OAAS,CACzC,CAAC,OAAQ,WAAY,WAAY,WAGnCR,EAAcS,KAAKJ,IAAI,KAA0B,CAC/C,CAAC,WAAY,oBAAqB,iBAAkB,OACpD,CAAC,WAAY,0BAA2B,iBAAkB,UAC1D,CAAC,WAAY,gCAAiC,YAAa,QAC3D,CAAC,YAAa,gBAAiB,aAAc,MAC7C,CAAC,YAAa,kBAAmB,YAAa,SAC9C,CAAC,YAAa,gBAAiB,QAAS,OACxC,CAAC,YAAa,gCAAiC,YAAa,WAG9DL,EAAcU,QAAQC,UAAU,GAAGC,WAAWC,aAAe,CAC3D,CAAC,cAEHb,EAAcY,WAAWE,OAAOC,iBAChCf,EAAcY,WAAWE,OAAOE,cAEzBjB,EAAQkB,UAEhBC,OAAM,SAAUC,GACfC,QAAQC,IAAI,UAAYF,GACpBA,aAAiBG,gBAAgBC,OACnCH,QAAQC,IAAI,eAAiBG,KAAKC,UAAUN,EAAMO,eAK1D,SAASC,IACP9B,MAAMC,KAAI,SAAUC,GAQhB,OAJuBA,EAAQE,SAASC,WAAWC,qBACdC,OAAOwB,QAAQ,iBACjBlB,QAAQkB,QAAQ,YAAYC,OAChDC,kBAAkB,CAAC,YAAa,cACxC/B,EAAQkB,UAElBC,OAAM,SAAUC,GACbC,QAAQC,IAAI,UAAYF,GACpBA,aAAiBG,gBAAgBC,OACjCH,QAAQC,IAAI,eAAiBG,KAAKC,UAAUN,EAAMO,eAK5D,SAASK,IACPlC,MAAMC,KAAI,SAAUC,GAahB,OAVuBA,EAAQE,SAASC,WAAWC,qBACdC,OAAOwB,QAAQ,iBAQtCI,KAAKC,MAPF,CACb,CACIC,IAAK,EACLC,WAAW,KAKZpC,EAAQkB,UAElBC,OAAM,SAAUC,GACbC,QAAQC,IAAI,UAAYF,GACpBA,aAAiBG,gBAAgBC,OACjCH,QAAQC,IAAI,eAAiBG,KAAKC,UAAUN,EAAMO,eAhG5DU,OAAOC,SAAQ,SAACC,GACVA,EAAKC,OAASH,OAAOI,SAAS3C,QAG3BuC,OAAOrC,QAAQ0C,aAAaC,eAAe,WAAY,QAC1DtB,QAAQC,IAAI,mGAIdsB,SAASC,eAAe,gBAAgBC,QAAUjD,EAClD+C,SAASC,eAAe,gBAAgBC,QAAUlB,EAClDgB,SAASC,eAAe,cAAcC,QAAUd,EAChDY,SAASC,eAAe,eAAeC,QAAUC,EAEjDH,SAASC,eAAe,gBAAgBG,MAAMC,QAAU,OACxDL,SAASC,eAAe,YAAYG,MAAMC,QAAU,WAsFxD,IAAIC,EAAS,KAEb,SAASH,IACPV,OAAOrC,QAAQmD,GAAGC,mBAGhB,yBACA,CAACC,OAAQ,GAAIC,MAAO,KAEpB,SAAUC,GACRlC,QAAQC,IAAI,mBACZ4B,EAASK,EAAOC,OACTC,gBAAgBpB,OAAOqB,UAAUC,sBAAuBC,MAKrE,SAASA,EAAeC,GACtBjB,SAASC,eAAe,aAAaiB,UAAYD,EAAIE,QACrDb,EAAOc,S","sources":["webpack:///./src/taskpane/taskpane.js?"],"sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable prettier/prettier */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n\n    // Determine if the user's version of Office supports all the Office.js APIs that are used in the tutorial.\n    if (!Office.context.requirements.isSetSupported('ExcelApi', '1.7')) {\n      console.log('Sorry. The tutorial add-in uses Excel.js APIs that are not available in your version of Office.');\n    }\n\n    // Assign event handlers and other initialization logic.\n    document.getElementById(\"create-table\").onclick = createTable;\n    document.getElementById(\"filter-table\").onclick = filterTable;\n    document.getElementById(\"sort-table\").onclick = sortTable;\n    document.getElementById(\"open-dialog\").onclick = openDialog;\n\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n\n  }\n});\n\nfunction createTable() {\n  Excel.run(function (context) {\n\n      // TODO1: Queue table creation logic here.\n      var currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n      var expensesTable = currentWorksheet.tables.add(\"A1:D1\", true /*hasHeaders*/ );\n      expensesTable.name = \"ExpensesTable\";\n      // TODO2: Queue commands to populate the table with data.\n      expensesTable.getHeaderRowRange().values = [\n        [\"Date\", \"Merchant\", \"Category\", \"Amount\"]\n      ];\n\n      expensesTable.rows.add(null /*add at the end*/ , [\n        [\"1/1/2017\", \"The Phone Company\", \"Communications\", \"120\"],\n        [\"1/2/2017\", \"Northwind Electric Cars\", \"Transportation\", \"142.33\"],\n        [\"1/5/2017\", \"Best For You Organics Company\", \"Groceries\", \"27.9\"],\n        [\"1/10/2017\", \"Coho Vineyard\", \"Restaurant\", \"33\"],\n        [\"1/11/2017\", \"Bellows College\", \"Education\", \"350.1\"],\n        [\"1/15/2017\", \"Trey Research\", \"Other\", \"135\"],\n        [\"1/15/2017\", \"Best For You Organics Company\", \"Groceries\", \"97.88\"]\n      ]);\n      // TODO3: Queue commands to format the table.\n      expensesTable.columns.getItemAt(3).getRange().numberFormat = [\n        ['\\u20AC#,##0.00']\n      ];\n      expensesTable.getRange().format.autofitColumns();\n      expensesTable.getRange().format.autofitRows();\n\n      return context.sync();\n    })\n    .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n    });\n}\n\nfunction filterTable() {\n  Excel.run(function (context) {\n\n      // TODO1: Queue commands to filter out all expense categories except\n      //        Groceries and Education.\n      var currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n      var expensesTable = currentWorksheet.tables.getItem('ExpensesTable');\n      var categoryFilter = expensesTable.columns.getItem('Category').filter;\n      categoryFilter.applyValuesFilter(['Education', 'Groceries']);\n      return context.sync();\n  })\n  .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n          console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n  });\n}\n\nfunction sortTable() {\n  Excel.run(function (context) {\n\n      // TODO1: Queue commands to sort the table by Merchant name.\n      var currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n      var expensesTable = currentWorksheet.tables.getItem('ExpensesTable');\n      var sortFields = [\n          {\n              key: 1,            // Merchant column\n              ascending: false,\n          }\n      ];\n      \n      expensesTable.sort.apply(sortFields);\n      return context.sync();\n  })\n  .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n          console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n  });\n}\n\nvar dialog = null;\n\nfunction openDialog() {\n  Office.context.ui.displayDialogAsync(\n    //'https://localhost:3000/popup.html',\n    //'https://xrq1051.github.io/excelAddin/popup.html',\n    'https://www.baidu.com/',\n    {height: 45, width: 25},\n\n    function (result) {\n      console.log(11111111111111111)\n      dialog = result.value;\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, processMessage);\n  }\n);\n}\n\nfunction processMessage(arg) {\n  document.getElementById(\"user-name\").innerHTML = arg.message;\n  dialog.close();\n}"],"names":["createTable","Excel","run","context","expensesTable","workbook","worksheets","getActiveWorksheet","tables","add","name","getHeaderRowRange","values","rows","columns","getItemAt","getRange","numberFormat","format","autofitColumns","autofitRows","sync","catch","error","console","log","OfficeExtension","Error","JSON","stringify","debugInfo","filterTable","getItem","filter","applyValuesFilter","sortTable","sort","apply","key","ascending","Office","onReady","info","host","HostType","requirements","isSetSupported","document","getElementById","onclick","openDialog","style","display","dialog","ui","displayDialogAsync","height","width","result","value","addEventHandler","EventType","DialogMessageReceived","processMessage","arg","innerHTML","message","close"],"sourceRoot":""}