{"version":3,"file":"taskpane.js","mappings":"YA2BA,SAASA,IACPC,MAAMC,KAAI,SAAUC,GAGhB,IACIC,EADmBD,EAAQE,SAASC,WAAWC,qBACdC,OAAOC,IAAI,SAAS,GAoBzD,OAjBAL,EAAcM,oBAAoBC,OAClC,CAAC,CAAC,OAAQ,WAAY,WAAY,WAEtCP,EAAcQ,KAAKH,IAAI,KAAyB,CAC5C,CAAC,WAAY,oBAAqB,iBAAkB,OACpD,CAAC,WAAY,0BAA2B,iBAAkB,UAC1D,CAAC,WAAY,gCAAiC,YAAa,QAC3D,CAAC,YAAa,gBAAiB,aAAc,MAC7C,CAAC,YAAa,kBAAmB,YAAa,SAC9C,CAAC,YAAa,gBAAiB,QAAS,OACxC,CAAC,YAAa,gCAAiC,YAAa,WAG5DL,EAAcS,QAAQC,UAAU,GAAGC,WAAWC,aAAe,CAAC,CAAC,cAC/DZ,EAAcW,WAAWE,OAAOC,iBAChCd,EAAcW,WAAWE,OAAOE,cAEzBhB,EAAQiB,UAElBC,OAAM,SAAUC,GACbC,QAAQC,IAAI,UAAYF,GACpBA,aAAiBG,gBAAgBC,OACjCH,QAAQC,IAAI,eAAiBG,KAAKC,UAAUN,EAAMO,eAhD5DC,OAAOC,SAAQ,SAACC,GACVA,EAAKC,OAASH,OAAOI,SAASjC,QAG/B6B,OAAO3B,QAAQgC,aAAaC,eAAe,WAAY,QAC1Db,QAAQC,IAAI,mGAIda,SAASC,eAAe,gBAAgBC,QAAUvC,EAG9CqC,SAASC,eAAe,gBAAgBE,MAAMC,QAAU,OACxDJ,SAASC,eAAe,YAAYE,MAAMC,QAAU,W","sources":["webpack:///./src/taskpane/taskpane.js?"],"sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable prettier/prettier */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n\n// Determine if the user's version of Office supports all the Office.js APIs that are used in the tutorial.\nif (!Office.context.requirements.isSetSupported('ExcelApi', '1.7')) {\n  console.log('Sorry. The tutorial add-in uses Excel.js APIs that are not available in your version of Office.');\n}\n\n// Assign event handlers and other initialization logic.\ndocument.getElementById(\"create-table\").onclick = createTable;\n\n\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n\n  }\n});\n\nfunction createTable() {\n  Excel.run(function (context) {\n\n      // TODO1: Queue table creation logic here.\n      var currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n      var expensesTable = currentWorksheet.tables.add(\"A1:D1\", true /*hasHeaders*/);\n      //expensesTable.name = \"ExpensesTable\";\n      // TODO2: Queue commands to populate the table with data.\n      expensesTable.getHeaderRowRange().values =\n      [[\"Date\", \"Merchant\", \"Category\", \"Amount\"]];\n  \n  expensesTable.rows.add(null /*add at the end*/, [\n      [\"1/1/2017\", \"The Phone Company\", \"Communications\", \"120\"],\n      [\"1/2/2017\", \"Northwind Electric Cars\", \"Transportation\", \"142.33\"],\n      [\"1/5/2017\", \"Best For You Organics Company\", \"Groceries\", \"27.9\"],\n      [\"1/10/2017\", \"Coho Vineyard\", \"Restaurant\", \"33\"],\n      [\"1/11/2017\", \"Bellows College\", \"Education\", \"350.1\"],\n      [\"1/15/2017\", \"Trey Research\", \"Other\", \"135\"],\n      [\"1/15/2017\", \"Best For You Organics Company\", \"Groceries\", \"97.88\"]\n  ]);\n      // TODO3: Queue commands to format the table.\n      expensesTable.columns.getItemAt(3).getRange().numberFormat = [['\\u20AC#,##0.00']];\n      expensesTable.getRange().format.autofitColumns();\n      expensesTable.getRange().format.autofitRows();\n\n      return context.sync();\n  })\n  .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n          console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n  });\n}"],"names":["createTable","Excel","run","context","expensesTable","workbook","worksheets","getActiveWorksheet","tables","add","getHeaderRowRange","values","rows","columns","getItemAt","getRange","numberFormat","format","autofitColumns","autofitRows","sync","catch","error","console","log","OfficeExtension","Error","JSON","stringify","debugInfo","Office","onReady","info","host","HostType","requirements","isSetSupported","document","getElementById","onclick","style","display"],"sourceRoot":""}